CMAKE_MINIMUM_REQUIRED(VERSION 3.2)
PROJECT(${CFG_PROJECT_NAME})

STRING(TOUPPER ${CFG_PROJECT_NAME} CFG_PROJECT_NAME_UPPER)
SET(MAKER_PATH ../../${CFG_DEPENDENT_PATH}/maker)
INCLUDE(${MAKER_PATH}/maker.cmake)
ADD_DEFINITIONS(-DBUILD_ARCH_${BUILD_ARCH} -DBUILD_PLATFORM_${BUILD_PLATFORM} -DBUILD_INTRINSICS_LEVEL=${CFG_INTRINSICS_LEVEL})

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

MACRO(CORE_LIB _is_shared _name _lib _suffix _folder)
	SET(ITER ${_name})
	UNSET(LIB_FILE_LIST)
	UNSET(LIB_FILE_PATHS)
	LIST(APPEND LIB_FILE_PATHS ${SOURCE_PATH}/${ITER})
	SEARCH_FILES(LIB_FILE_LIST ${ITER} LIB_FILE_PATHS)
	IF(${_is_shared})
		ADD_LIBRARY(${ITER}${_suffix} SHARED ${LIB_FILE_LIST})
		TARGET_INCLUDE_DIRECTORIES(${ITER}${_suffix} PUBLIC ${SOURCE_PATH}/${ITER})
		STRING(TOUPPER ${ITER} ITER_UPPER)
		TARGET_COMPILE_DEFINITIONS(${ITER}${_suffix} PRIVATE BUILD_SHARED_LIB ${ITER_UPPER}_EXPORTS)
		SET_TARGET_PROPERTIES(${ITER}${_suffix} PROPERTIES FOLDER ${_folder})
		ADD_PRECOMPILED_HEADER(${ITER}${_suffix} LIB_FILE_LIST "stdafx")
		IF(NOT MSVC)
			TARGET_LINK_LIBRARIES(${ITER}${_suffix} ${_lib} pthread)
		ELSE()
			TARGET_LINK_LIBRARIES(${ITER}${_suffix} ${_lib})
		ENDIF()
	ELSE()
		ADD_LIBRARY(${ITER}${_suffix} STATIC ${LIB_FILE_LIST})
		TARGET_INCLUDE_DIRECTORIES(${ITER}${_suffix} PUBLIC ${SOURCE_PATH}/${ITER})
		TARGET_COMPILE_DEFINITIONS(${ITER}${_suffix} PRIVATE BUILD_STATIC_LIB)
		SET_TARGET_PROPERTIES(${ITER}${_suffix} PROPERTIES FOLDER ${_folder})
		ADD_PRECOMPILED_HEADER(${ITER}${_suffix} LIB_FILE_LIST "stdafx")
		IF(NOT MSVC)
			TARGET_LINK_LIBRARIES(${ITER}${_suffix} ${_lib} pthread)
		ELSE()
			TARGET_LINK_LIBRARIES(${ITER}${_suffix} ${_lib})
		ENDIF()
	ENDIF()
ENDMACRO()

MACRO(SHELL_LIB _is_shared _name _lib _suffix _folder)
	SET(ITER ${_name})
	UNSET(LIB_FILE_LIST)
	UNSET(LIB_FILE_PATHS)
	LIST(APPEND LIB_FILE_PATHS ${SOURCE_PATH}/${ITER})
	SEARCH_FILES(LIB_FILE_LIST ${ITER} LIB_FILE_PATHS)
	ADD_LIBRARY(${ITER}${_suffix} STATIC ${LIB_FILE_LIST})
	TARGET_INCLUDE_DIRECTORIES(${ITER}${_suffix} PUBLIC ${SOURCE_PATH}/${ITER})
	IF(${_is_shared})
		TARGET_COMPILE_DEFINITIONS(${ITER}${_suffix} PRIVATE BUILD_SHARED_LIB)
	ELSE()
		TARGET_COMPILE_DEFINITIONS(${ITER}${_suffix} PRIVATE BUILD_STATIC_LIB)
	ENDIF()
	SET_TARGET_PROPERTIES(${ITER}${_suffix} PROPERTIES FOLDER ${_folder})
	ADD_PRECOMPILED_HEADER(${ITER}${_suffix} LIB_FILE_LIST "stdafx")
	TARGET_LINK_LIBRARIES(${ITER}${_suffix} ${_lib})
ENDMACRO()

MACRO(TEST_PROJ _is_shared _win _name _lib _suffix _folder)
	SET(ITER ${_name})
	UNSET(TEST_FILE_PATH)
	LIST(APPEND TEST_FILE_PATH ${TEST_PATH}/${ITER})
	SEARCH_FILES(TEST_FILE_LIST ${ITER} TEST_FILE_PATH)
	ADD_EXECUTABLE(${ITER}${_suffix} ${TEST_FILE_LIST})
	IF(${_is_shared})
		TARGET_COMPILE_DEFINITIONS(${ITER}${_suffix} PRIVATE BUILD_SHARED_LIB)
	ELSE()
		TARGET_COMPILE_DEFINITIONS(${ITER}${_suffix} PRIVATE BUILD_STATIC_LIB)
	ENDIF()
	TARGET_LINK_LIBRARIES(${ITER}${_suffix} ${_lib})
	SET_TARGET_PROPERTIES(${ITER}${_suffix} PROPERTIES FOLDER ${_folder})
	IF(${_win})
		SET_TARGET_PROPERTIES(${ITER}${_suffix} PROPERTIES LINK_FLAGS "/SUBSYSTEM:WINDOWS")
	ENDIF()
	ADD_PRECOMPILED_HEADER(${ITER}${_suffix} TEST_FILE_LIST "stdafx")
ENDMACRO()

ADD_SUBDIRECTORY(external)
ADD_SUBDIRECTORY(static)
ADD_SUBDIRECTORY(shared)
